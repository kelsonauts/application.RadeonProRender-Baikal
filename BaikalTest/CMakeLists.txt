set(SOURCES
    aov.h
    basic.h
    camera.h
    input_maps.h
    internal.h
    light.h
    main.cpp
    material.h
    test_scenes.h
    uberv2.h)

add_executable(BaikalTest ${SOURCES})
target_compile_features(BaikalTest PRIVATE cxx_std_14)

target_include_directories(BaikalTest PRIVATE .)
target_link_libraries(BaikalTest PRIVATE Baikal BaikalIO GTest)

set_target_properties(BaikalTest
    PROPERTIES VS_DEBUGGER_WORKING_DIRECTORY ${Baikal_SOURCE_DIR}/BaikalTest FOLDER Baikal)
target_compile_definitions(BaikalTest PRIVATE _SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING=1)

# Add symbolic links to BaikalTest/OutputImages and BaikalTest/ReferenceImages directory
set(BAIKALTEST_REFERENCEIMAGES_DIR ReferenceImages)
FILE(TO_NATIVE_PATH ${Baikal_SOURCE_DIR}/BaikalTest/${BAIKALTEST_REFERENCEIMAGES_DIR} BAIKALTEST_REFERENCEIMAGES_SRC)
FILE(TO_NATIVE_PATH ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${BAIKALTEST_REFERENCEIMAGES_DIR} BAIKALTEST_REFERENCEIMAGES_DST)

set(BAIKALTEST_OUTPUTIMAGES_DIR OutputImages)
FILE(TO_NATIVE_PATH ${Baikal_SOURCE_DIR}/BaikalTest/${BAIKALTEST_OUTPUTIMAGES_DIR} BAIKALTEST_OUTPUTIMAGES_SRC)
FILE(TO_NATIVE_PATH ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${BAIKALTEST_OUTPUTIMAGES_DIR} BAIKALTEST_OUTPUTIMAGES_DST)

if (WIN32)
    add_custom_target(BaikalTestImagesDir ALL
        COMMAND IF NOT EXIST ${BAIKALTEST_REFERENCEIMAGES_DST} mklink /D ${BAIKALTEST_REFERENCEIMAGES_DST} ${BAIKALTEST_REFERENCEIMAGES_SRC}
        COMMAND IF NOT EXIST ${BAIKALTEST_OUTPUTIMAGES_DST} mklink /D ${BAIKALTEST_OUTPUTIMAGES_DST} ${BAIKALTEST_OUTPUTIMAGES_SRC}
    )
else ()
    add_custom_target(BaikalTestImagesDir ALL
        COMMAND ${CMAKE_COMMAND} -E create_symlink ${BAIKALTEST_REFERENCEIMAGES_SRC} ${BAIKALTEST_REFERENCEIMAGES_DST}
        COMMAND ${CMAKE_COMMAND} -E create_symlink ${BAIKALTEST_OUTPUTIMAGES_SRC} ${BAIKALTEST_OUTPUTIMAGES_DST}
    )
endif ()

add_dependencies(BaikalTest BaikalTestImagesDir ResourcesDir)

# Install target
install(TARGETS BaikalTest RUNTIME DESTINATION bin)
install(DIRECTORY DESTINATION BaikalTest/${BAIKALTEST_REFERENCEIMAGES_DIR})
install(DIRECTORY DESTINATION BaikalTest/${BAIKALTEST_OUTPUTIMAGES_DIR})

# Create bat/sh launcher files
if (WIN32)
    set(BAIKAL_TEST_LAUNCHER_SCRIPT_FILENAME "BaikalTest.bat")
    set(BAIKAL_TEST_LAUNCHER_SCRIPT "..\\bin\\BaikalTest")

    set(BAIKAL_TEST_LAUNCHER_SCRIPT_GENREF_FILENAME "BaikalTest_genref.bat")
    set(BAIKAL_TEST_LAUNCHER_SCRIPT_GENREF "..\\bin\\BaikalTest -genref 1")

else ()
    set(BAIKAL_TEST_LAUNCHER_SCRIPT_FILENAME "BaikalTest.sh")
    
    if (APPLE)
        set(LIBDIR_STRING "export DYLD_LIBRARY_PATH=../bin:$DYLD_LIBRARY_PATH")
    elseif (UNIX AND NOT APPLE)
        set(LIBDIR_STRING "export LD_LIBRARY_PATH=../bin:$LD_LIBRARY_PATH")
    endif (APPLE)
    
    set(BAIKAL_TEST_LAUNCHER_SCRIPT "#!/bin/sh\n${LIBDIR_STRING}\n../bin/BaikalTest")
    
    set(BAIKAL_TEST_LAUNCHER_SCRIPT_GENREF_FILENAME "BaikalTest_genref.sh")
    set(BAIKAL_TEST_LAUNCHER_SCRIPT_GENREF "#!/bin/sh\n${LIBDIR_STRING}\n../bin/BaikalTest -genref 1")

endif (WIN32)

file(WRITE
    ${CMAKE_CURRENT_BINARY_DIR}/${BAIKAL_TEST_LAUNCHER_SCRIPT_FILENAME}
    ${BAIKAL_TEST_LAUNCHER_SCRIPT})

file(WRITE
    ${CMAKE_CURRENT_BINARY_DIR}/${BAIKAL_TEST_LAUNCHER_SCRIPT_GENREF_FILENAME}
    ${BAIKAL_TEST_LAUNCHER_SCRIPT_GENREF})

install(PROGRAMS
    ${CMAKE_CURRENT_BINARY_DIR}/${BAIKAL_TEST_LAUNCHER_SCRIPT_FILENAME}
    ${CMAKE_CURRENT_BINARY_DIR}/${BAIKAL_TEST_LAUNCHER_SCRIPT_GENREF_FILENAME}
    DESTINATION BaikalTest PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE)
